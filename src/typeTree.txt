==================================================
using UnitTypes
import InteractiveUtils
import AbstractTrees
AbstractTrees.children(d::DataType) = InteractiveUtils.subtypes(d)
AbstractTrees.print_tree(AbstractMeasure)
==================================================

AbstractMeasure
├─ AbstractAcceleration
│  └─ MeterPerSecond2
├─ AbstractAngle     
│  ├─ Degree
│  └─ Radian
├─ AbstractArea       
│  ├─ Acre
│  ├─ Meter2
│  ├─ SquareFoot      
│  └─ SquareMile      
├─ AbstractCapacitance
│  ├─ Farad      
│  ├─ MicroFarad 
│  ├─ MilliFarad 
│  ├─ NanoFarad  
│  └─ PicoFarad  
├─ AbstractCharge
│  └─ Coulomb
├─ AbstractConductance
│  └─ Siemens     
├─ AbstractCurrent
│  └─ Ampere
├─ AbstractCurrentDensity
│  └─ APerM2      
├─ AbstractDensity
│  └─ KgPerM3
├─ AbstractElectricPotential
│  ├─ KiloVolt
│  └─ Volt      
├─ AbstractForce
│  ├─ KiloNewton      
│  ├─ MilliNewton     
│  └─ Newton
├─ AbstractFrequency  
│  ├─ Hertz
│  └─ PerSecond       
├─ AbstractIlluminance
│  └─ Lux
├─ AbstractInductance
│  ├─ Henry
│  └─ MilliHenry    
├─ AbstractIntensity
│  └─ Candela    
├─ AbstractLength
│  ├─ CentiMeter       
│  ├─ Femtometer       
│  ├─ Foot
│  ├─ Inch
│  ├─ KiloMeter        
│  ├─ Meter
│  ├─ MicroMeter       
│  ├─ Mile
│  ├─ MilliMeter       
│  ├─ NanoMeter        
│  ├─ NauticalMile     
│  ├─ PicoMeter        
│  └─ Yard
├─ AbstractLuminousFlux
│  └─ Lumen
├─ AbstractMagneticFieldStrength
│  └─ APerM
├─ AbstractMagneticFlux
│  └─ Weber
├─ AbstractMagneticFluxDensity
│  └─ Tesla    
├─ AbstractMass
│  ├─ KiloGram  
│  ├─ Ounce     
│  ├─ PoundMass 
│  └─ Slug      
├─ AbstractPower
│  └─ Watt
├─ AbstractPressure
│  └─ Pascal
├─ AbstractResistance
│  ├─ KiloOhm
│  ├─ MegaOhm
│  ├─ MilliOhm
│  └─ Ohm
├─ AbstractSpecificVolume
│  └─ M3PerKg
├─ AbstractSurfaceDensity
│  └─ KgPerM2
├─ AbstractTemperature
│  └─ Kelvin
├─ AbstractTime
│  └─ Second
├─ AbstractTorque
│  ├─ MilliNewtonMeter
│  ├─ NewtonMeter
│  └─ NewtonMilliMeter
├─ AbstractVelocity
│  ├─ FootPerSecond
│  └─ MeterPerSecond
└─ AbstractVolume
   ├─ FluidOunce
   ├─ Gallon
   ├─ Liter
   ├─ Meter3
   ├─ MilliLiter
   ├─ Pint
   └─ Quart

==================================================
using UnitTypes
import InteractiveUtils
import AbstractTrees
AbstractTrees.children(d::DataType) = InteractiveUtils.subtypes(d)
AbstractTrees.print_tree(AbstractDimension)
==================================================

AbstractDimension
├─ AbstractDepth
│  └─ Depth
├─ AbstractDiameter
│  └─ Diameter
├─ AbstractDuration
│  └─ Duration
├─ AbstractHeight
│  └─ Height
├─ AbstractRadius
│  └─ Radius
└─ AbstractWidth
   └─ Width